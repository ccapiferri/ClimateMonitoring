
Command syntax

SEARCH:
search <what> <by> <args>
<what>: [area, center]
<by>: <[name, country, coords], [name]>
<args>: <str, str, (latitude, longitude)>

VIEW
view <what> <by> <args>
<what>: [area, center]
<by>: [id, index]
<args>: <geoname_id, center_id>

LOGIN
login <user_id> <password>

REGISTER
register <user_id> <email> <password> <ssid> <name> <surname> <'center_id'>
(if 'center_id' is not specified, then after the registration it will be required to create a new center)
{

	if registration has no center id
		executeCenterCreation()
}

ADD
add <what> <args>
<what>: [area, center, parameter]
<args>: <(geoname_id, name, ascii_name, country_code, country_name, latitude, longitude), (center_id, street, house_number, postal_code, city, 'district'), (geoname_id, center_id, user_id, category, score, notes)>

EDIT
edit <profile>

SETTINGS
settings <setting> <args>
<setting>: [theme]
<args>: <classic, light, dark>

PING
ping

HELP
help

EXIT
exit

Command handling from layer side (inside onHeadlessRender())

line = input()
cmd, args <= Command(line)

switch (cmd)
	case SEARCH:
		viewState => Master
	case VIEW:
		cmd, args <= Command(args)
		switch (cmd)
			case "area":
				viewState => AreaInfo
			case "center":
				viewState => CenterInfo
	case LOGIN:
		viewState => Login
	case REGISTER:
		viewState => Registration
	case ADD:
		cmd, args <= Command(args)
		switch (cmd)
			case "area":
				viewState => AreaCreation
			case "center":
				viewState => CenterCreation
			case "parameter":
				viewState => ParameterCreation
	case EDIT:
		cmd, args <= Command(args)
		switch (cmd)
			case "profile":
				viewState => EditProfile
	case SETTINGS:
		viewState => Settings
	case PING:
		proxy.requestPing()
	case HELP:
		viewState => Help
	case EXIT:
		Application.close()